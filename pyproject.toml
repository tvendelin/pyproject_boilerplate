[project]
dynamic = ["version"]
name = "mypackage"
description = "A sample Python package"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE.txt"}
keywords = ["ionos-cloud", "ops-tools"]
authors = [
  {email = "max.mustermann@ionos.com"},
  {name = "Max Mustermann"}
]
maintainers = [
  {name = "Tommy Atkins", email = "tommy.atkins@ionos.com"}
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python"
]

dependencies = [
    "jinja2"
]

# CLI scripts that the package provides

[project.scripts]
ohoo = "mymodule:main"
mypackage = "mymodule.whatcani:list_tasks"

# Development-related configuration below this line
# -------------------------------------------------

[build-system]
requires = ["setuptools >= 61.0.0", "setuptools-git-versioning"]
build-backend = "setuptools.build_meta"

# Separate dependencies required for development
# from the dependencies of the code itself
[project.optional-dependencies] 
dev = [
    "black",
    "pylint",
    "isort >= 5.0.0",
    "coverage",
    "toml-cli",
    "pyyaml",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
mymodule = ["templates/*"]

[tool.setuptools-git-versioning]
enabled = true
template = "{tag}"

# Linters, formatters, code analysers
# CUSTOMIZATIONS MUST BE JUSTIFIED & DOCUMENTED IN COMMENTS HERE

# Maximum line length is set to 99 in several tools
# This is common preference at Ionos Cloud

[tool.pylint.basic]
# foo, bar, etc. are used in example code
bad-names = []
max-line-length = 99 
# Short variable names are OK in limited scope
variable-rgx = "[a-z_][a-z0-9_]{2,30}"

[tool.black]
line-length = 99

[tool.isort]
profile = "black"

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    "if __name__ == '__main__'",
    'if __name__ == "__main__"',
    '^\s*print\(.*\)',

]
fail_under = 90
